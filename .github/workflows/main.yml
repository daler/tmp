on: [push]

jobs:
  check-reqs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # need this for git diff-tree to work below
          fetch-depth: 3

      - name: get changed files
        id: getfile
        run: |
          if git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -q requirements.txt; then
            FOUND=1
          else
            FOUND=0
          fi
          echo "::set-output name=files::$FOUND"

      - name: echo output
        run: |
          echo ${{ steps.getfile.outputs.files }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: check-reqs
    name: Build and push docker image
    if: steps.getfiles.outputs.files
    steps:
      - name: echo output
        run: |
          echo ${{ steps.check.outputs.changed }}

      # On the default image used by GitHub Actions, there is 13 GB available.
      # When building the docker container, we use up all of this. Based on
      # some suggestions from [1] we remove some packages and docker images
      # that are pre-loaded.
      #
      # This gets about 60 GB free rather than 13 GB. The full disk is 85 GB,
      # so we're doing pretty well, but if you need to rm more, the full list
      # is at [2]
      #
      # [1] https://github.community/t5/GitHub-Actions/BUG-Strange-quot-No-space-left-on-device-quot-IOExceptions-on/td-p/46101/page/2
      # [2] https://github.com/actions/virtual-environments/blob/master/images/linux/Ubuntu1804-README.md
      - name: clean
        run: |
          df -h
          sudo swapoff /swapfile
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get remove -y php7* ghc*
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          sudo rm -rf /usr/local/lib/android
          docker rmi $(docker image ls -aq)
          df -h
      - uses: actions/checkout@v2
      - name: docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker build
        run: docker build -t tmp .
      - name: docker tag
        run: |
          docker tag tmp ${{ secrets.DOCKER_USERNAME}}/tmp:${{ github.sha }}
          docker tag tmp ${{ secrets.DOCKER_USERNAME}}/tmp:latest
      - name: docker push
        run: |
          docker push ${{ secrets.DOCKER_USERNAME}}/tmp:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME}}/tmp:latest

  docker-pull:
    runs-on: ubuntu-latest
    if: needs.check-reqs.outputs.needs-build == true
    needs: check-reqs
    steps:
      - uses: actions/checkout@v2
      - name: run-container
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/tmp:latest
          docker run ${{ secrets.DOCKER_USERNAME }}/tmp:latest ls -l
